---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";

import fetchApi from "../lib/strapi";
import type Article from "../interfaces/article";

const articles = await fetchApi<Article[]>({
	endpoint: "articles", // the content type to fetch
	wrappedByKey: "data", // the key to unwrap the response
});

const fixstars = {
	title: "Software Engineer @ Fixstars Solutions, Inc.",
	link: "https://us.fixstars.com/",
	body: `In charge of Technical Marketing for GridDB, entails backend and frontend development work, mostly using React and Java. Extensive work with NoSQL/SQL Database. Direct communication with client, managing UpWork freelancers.`,
	color: "#23262d"
};

const projects = [
	{
		title: "GridLog",
		link: "https://github.com/griddbnet/gridlog/tree/part-iii",
		body: `Full Stack application using: GridDB, Spring Boot, React.js. GridLog polls log files on host machine, takes the raw logs, saves into DB, then takes the raw logs from the DB, parses it, and converts into fieldable logs using regex. Log Viewer allows you to see these logs and to query them with a query builder. Still WIP. Recently added Classical Machine Learning Classification on incoming Logs as an marketing tool.`,
		color: "#4a6002" 
	},
	{
		title: "Udemy Course on IoT Projects",
		link: "https://www.udemy.com/course/create-a-working-iot-project-with-iot-database-griddb",
		body: `GridDB course meant to market the database to a new audience, namely an IoT focused audience.`,
		color: "#4a6002" 
	},
	{
		title: "This website",
		link: "/",
		body: `Portfolio type website. Built with Astro, CMS built with Strapi on Railway, static content hosted on Netlify. Blogs below gathered from https://griddb.net using simple node.js script`,
		color: "#4a6002" 
	}
];
---

<Layout title="Israel Imru">
	<main>
		<h1>Israel Imru</h1>

		<span class="text-3xl text-blue-200 underline decoration-sky-500"> <a href="/about"> About Page  <i class="fa-solid fa-link text-md"></i> </a></span>

		<div class="mx-3 my-20">
			<h2 class="text-neutral-200 text-3xl my-5"> Employment </h2>
			<div class="my-6" >
				<Card
				href={fixstars.link}
				title={fixstars.title}
				body={fixstars.body}
				color={fixstars.color}
			/>
			</div>
		</div>
		<div class="mx-3 my-20">
		<h2 class="text-neutral-200  text-3xl my-5"> Projects</h2>
		<div class="my-6" >

			{
				projects.map((project) => (
					<Card
						href={project.link}
						title={project.title}
						body={project.body}
						color={project.color}
					/>
				))
			}


		</div>
</div>

<div class="mx-3 my-20"> 
		<h2 class="text-neutral-200 text-3xl my-5"> Blogs</h2>
		<ol class="list-decimal">
			{
				articles.map((article) => (
					<li class="my-2 text-blue-200 hover:text-sky-400">
						<a href={`/blog/${article.attributes.slug}/`}>
							{article.attributes.title}
						</a>
					</li>
				))
			}


		</ol>
		</div>
	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
</style>
